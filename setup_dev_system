#!/bin/bash

CPU_NUM=$(cat /proc/cpuinfo | grep -wc processor)

# apt-get
apt-get remove -y nano
apt-get autoremove -y

apt-get install -y libunwind8-dev
apt-get install -y libjemalloc-dev libgoogle-perftools-dev
apt-get install -y lib64bz2-1.0 libbz2-dev p7zip-full liblz4-dev zlib1g-dev liblzma-dev
apt-get install -y libboost-all-dev
apt-get install -y libgflags-dev libgoogle-glog-dev libsnappy-dev libprotobuf-dev protobuf-compiler libprotoc-dev
apt-get install -y libyaml-cpp-dev libjsoncpp-dev libjansson-dev libcurl4-openssl-dev libtinyxml-dev libc-ares-dev uuid-dev
apt-get install -y libglib2.0-dev

apt-get install -y build-essential gdb # gcc/g++/gdb
apt-get install -y autoconf libtool
apt-get install -y coreutils vim lrzsz sshpass tree exuberant-ctags cmake cmake-curses-gui
apt-get install -y dstat linux-tools-common linux-tools-$(uname -r)
apt-get install -y git-all mercurial bzr subversion git-svn
apt-get install -y supervisor ipython graphviz
apt-get install -y clang-3.5 clang-3.5-doc
apt-get install -y python-setuptools
apt-get install -y nodejs-dev nodejs-legacy npm
apt-get install -y libmysql++-dev

# source install
# rocksdb:
ROCKSDB_PKG=  # eg: $HOME/pkg/rocksdb/rocksdb-rocksdb-3.5.tar.gz
if [ -n "$ROCKSDB_PKG" ] ; then
    ./tools/install_rocksdb $ROCKSDB_PKG
fi

# system setting tuning
echo $(( 100 * 1024 * 1024 * 1024 )) > /proc/sys/kernel/shmmax

# TODO(zog): sanity_check
